---

- name: CephFS Provisioner | Remove legacy addon dir and manifests
  file:
    path: "{{ kube_config_dir }}/addons/cephfs_provisioner"
    state: absent
  when:
    - inventory_hostname == groups['kube_control_plane'][0]
  tags:
    - upgrade

- name: CephFS Provisioner | Remove legacy namespace
  command: >
    {{ kubectl }} delete namespace {{ cephfs_provisioner_namespace }}
  ignore_errors: true  # noqa ignore-errors
  when:
    - inventory_hostname == groups['kube_control_plane'][0]
  tags:
    - upgrade

- name: CephFS Provisioner | Remove legacy storageclass
  command: >
    {{ kubectl }} delete storageclass {{ cephfs_provisioner_storage_class }}
  ignore_errors: true  # noqa ignore-errors
  when:
    - inventory_hostname == groups['kube_control_plane'][0]
  tags:
    - upgrade

- name: CephFS Provisioner | Create addon dir
  file:
    path: "{{ kube_config_dir }}/addons/cephfs_provisioner"
    state: directory
    owner: root
    group: root
    mode: "0755"
  when:
    - inventory_hostname == groups['kube_control_plane'][0]

- name: CephFS Provisioner | Templates list
  set_fact:
    cephfs_provisioner_templates:
      - { name: 00-namespace, file: 00-namespace.yml, type: ns }
      - { name: sa-cephfs-csi-cephfs-nodeplugin, file: sa-cephfs-csi-cephfs-nodeplugin.yml, type: sa }
      - { name: sa-cephfs-provisioner, file: sa-cephfs-provisioner.yml, type: sa }
      - { name: secret-csi-cephfs-secret, file: secret-csi-cephfs-secret.yml, type: secret }
      - { name: cm-ceph-config, file: cm-ceph-config.yml, type: cm }
      - { name: cm-ceph-csi-config, file: cm-ceph-csi-config.yml, type: cm }
      - { name: sc-csi-cephfs-sc, file: sc-csi-cephfs-sc.yml, type: storageclass }
      - { name: clusterrole-ceph-csi-cephfs-nodeplugin, file: clusterrole-ceph-csi-cephfs-nodeplugin.yml, type: clusterrole }
      - { name: clusterrole-ceph-csi-cephfs-provisioner, file: clusterrole-ceph-csi-cephfs-provisioner.yml, type: clusterrole }
      - { name: clusterrolebinding-ceph-csi-cephfs-nodeplugin, file: clusterrolebinding-ceph-csi-cephfs-nodeplugin.yml, type: clusterrolebinding }
      - { name: clusterrolebinding-ceph-csi-cephfs-provisioner, file: clusterrolebinding-ceph-csi-cephfs-provisioner.yml, type: clusterrolebinding }
      - { name: role-ceph-csi-cephfs-provisioner, file: role-ceph-csi-cephfs-provisioner.yml, type: role }
      - { name: rolebinding-ceph-csi-cephfs-provisioner, file: rolebinding-ceph-csi-cephfs-provisioner.yml, type: rolebinding }
      - { name: svc-ceph-csi-cephfs-nodeplugin-http-metrics, file: svc-ceph-csi-cephfs-nodeplugin-http-metrics.yml, type: service }
      - { name: svc-ceph-csi-cephfs-provisioner-http-metrics, file: svc-ceph-csi-cephfs-provisioner-http-metrics.yml, type: service}
      - { name: daemonset-csi-cephfsplugin, file: daemonset-csi-cephfsplugin.yml, type: daemonset }
      - { name: deploy-csi-cephfsplugin-provisioner, file: deploy-csi-cephfsplugin-provisioner.yml, type: deploy }
      - { name: csidriver-cephfs, file: csidriver-cephfs.yml, type: CSIDriver }

- name: CephFS Provisioner | Create manifests
  template:
    src: "{{ item.file }}.j2"
    dest: "{{ kube_config_dir }}/addons/cephfs_provisioner/{{ item.file }}"
    mode: "0644"
  with_items: "{{ cephfs_provisioner_templates }}"
  register: cephfs_provisioner_manifests
  when: inventory_hostname == groups['kube_control_plane'][0]

- name: CephFS Provisioner | Apply manifests
  kube:
    name: "{{ item.item.name }}"
    namespace: "{{ cephfs_provisioner_namespace }}"
    kubectl: "{{ bin_dir }}/kubectl"
    resource: "{{ item.item.type }}"
    filename: "{{ kube_config_dir }}/addons/cephfs_provisioner/{{ item.item.file }}"
    state: "latest"
  with_items: "{{ cephfs_provisioner_manifests.results }}"
  when: inventory_hostname == groups['kube_control_plane'][0]
